<?xml version="1.0" encoding="UTF-8"?>
<RCJobs>
	<!-- WH properties-->
	<DefaultProperties ListFile="" /> <!-- optional, this file contains list of resources -->
	<DefaultProperties IsMaster="0" />	<!-- non-master files (e.g. shaders source) ere excluded -->
	<DefaultProperties IsTechAlpha="0" /> <!-- non-alpha files are excluded -->

	<ifnot ListFile = "">
		<Properties ListFile = "${src_game}\${ListFile}" /> <!-- RS: add game path to ${ListFile} -->
	</ifnot>

	<!-- General properties-->
	<DefaultProperties GameFolder="Data" /> <!-- The subfolder that contains game assets -->
	<DefaultProperties LocalizationFolder="Localization" /> <!-- The subfolder that contains localization data -->
	<DefaultProperties EngineFolder="Engine" /> <!-- The subfolder containing engine assets, probably should never be changed by 3rd party projects (it's hardcoded) -->
	<DefaultProperties P="PC" /> <!-- Special case: p must be set from the commandline, and it cannot be set to something else using RCJob, this default reflects the hardcoded default -->
	<Properties Platform="${P}" /> <!-- This is an alias of p that is used in this job file only -->

	<!-- Default path properties -->
	<DefaultProperties InputPath="." /> <!-- By default, assume current directory contains source assets -->
	<DefaultProperties TempPath="${InputPath}/TempRC/${Platform}" /> <!-- This script will store converted (but unpacked) files in a temp folder -->
	<DefaultProperties OutputPath="${InputPath}/OutRC/${Platform}" /> <!-- The target folder for the output files (packed converted files) -->

	<Properties SourceRoot="${InputPath}/${GameFolder}" /> <!-- We don't use 'TempPath' here, because some tables are generated by editor to 'InputPath' -->
	<Properties TargetRoot="${OutputPath}/${GameFolder}" />

	<!-- Shared constant properties -->
	<Properties XmlFilterFile="${_rc_exe_folder}xmlfilter.txt" /> <!-- file with special commands to filter out unneeded XML elements and attributes -->
	<Properties XmlExtensions="*.animevents;*.adb;*.bspace;*.cdf;*.chrparams;*.comb;*.dlg;*.ent;*.fsq;*.fxl;*.ik;*.json;*.lmg;*.mtl;*.setup;*.xml;*.node;*.veg;*.lyr" />

	<Properties ExcludeLocal="" />

	<!-- TargetHasEditor, if not passed assume this is only the case for PC -->
	<!-- By passing explicit zero while platform is PC, you can create a "pure client" asset build -->
	<DefaultProperties TargetHasEditor="" />
	<If TargetHasEditor="">
		<If Platform="PC">
			<Properties TargetHasEditor="1" />
		</If>
		<IfNot Platform="PC">
			<Properties TargetHasEditor="0" />
		</IfNot>
	</If>

	<!-- If (TargetHasEditor == 0 && Platform == PC) store temp files in a separate folder -->
	<If TargetHasEditor="0">
		<If Platform="PC">
			<Properties TempPath="${TempPath}_pure" />
		</If>
	</If>

	<!-- Compile lua script template -->
	<LuaJob>
		<If TargetHasEditor="1">
			<Properties CopyOnly="1" /> <!-- If we have editor, don't compile lua script -->
		</If>
		<Job Input="*.lua" Statistics="true" /> <!-- WH: Added Statistics here since there was weird error without it -->
	</LuaJob>

	<!-- Convert XML template -->
	<XmlJob>
		<Properties OverwriteExtension="xml" />
		<If TargetHasEditor="1">
			<Properties CopyOnly="1" /> <!-- If we have editor, don't make binary XML -->
		</If>
		<If IsMaster="0">
			<Properties CopyOnly="1" />  <!-- WH: Text XML is preferred unless master is compiled -->
		</If>
		<Job Input="${XmlExtensions}" />
	</XmlJob>

	<ScriptFolderConversion>
		<!-- Pack scripts inside a single subfolder -->
		<Properties SourceRoot="${SourceRoot}/${SubFolder}" />
		<Properties TargetRoot="${TargetRoot}/${SubFolder}" />
		<Run Job="XmlJob" Exclude="${ExcludeLocal}"/>
		<Run Job="LuaJob" Exclude="${ExcludeLocal}"/>
		<Job Input="*.*" Exclude="${ExcludeLocal};${XmlExtensions};*.lua" CopyOnly="1" SkipMissing="true" /> <!-- WH: Added SkipMissing because it generated error when no other files has been found -->
	</ScriptFolderConversion>

	<ScriptAssetsConversion>
		<IfNot SuppressCodeBranchSpecificConversion="1">
			<!-- Conversion -->
			<Properties SourceRoot="${InputPath}/${GameFolder}" />
			<Properties TargetRoot="${TempPath}/${GameFolder}_Scripts" />
			<Run Job="ScriptFolderConversion" SubFolder="Entities" />
			<Run Job="ScriptFolderConversion" SubFolder="Scripts" ExcludeLocal = "Startup/*.*"/>
			<Run Job="ScriptFolderConversion" SubFolder="Libs/AI" ExcludeLocal = "_*/*.*;autotest/*.*;bug_report/*.*;so/*.*;TreeReplays/*.*"/>
			<Run Job="ScriptFolderConversion" SubFolder="Libs/Haste" />

			<!-- Pack files -->
			<Properties SourceRoot="${TargetRoot}" />
			<Properties TargetRoot="${OutputPath}/${GameFolder}" />
			<Properties DLC2Scripts="q_loveLetter.*;q_gamblersDen.*;q_superstition.*" />
			<Properties DLC2Exclude="Libs/AI/quests/q_loveLetter.xml;Libs/AI/quests/q_gamblersDen.xml;Libs/AI/quests/q_superstition.xml" />
			<Properties DLC3Scripts="q_rides*" />
			<Properties DLC3Exclude="Libs/AI/quests/q_rides*.xml" />
			<Properties DLC4Scripts="q_theresa*;q_dlc_revelation.xml;q_dlc_revelation_a*;q_dlc_revelation_g*;q_dlc_revelation_m*;q_dlc_revelation_t*;q_dog.xml;Scripts/Quests/Revelation*.lua" />
			<Properties DLC4Exclude="Libs/AI/quests/q_theresa*;Libs/AI/quests/q_dlc_revelation.xml;Libs/AI/quests/q_dlc_revelation_a*;Libs/AI/quests/q_dlc_revelation_g*;Libs/AI/quests/q_dlc_revelation_m*;Libs/AI/quests/q_dlc_revelation_t*;Libs/AI/quests/q_dog.xml;Scripts/Quests/Revelation*.lua" />
			<Job Input="${DLC2Scripts}" Zip="${TargetRoot}/Scripts_DLC2.pak"/>
			<Job Input="${DLC3Scripts}" Zip="${TargetRoot}/Scripts_DLC3.pak"/>
			<Job Input="${DLC4Scripts}" Zip="${TargetRoot}/Scripts_DLC4.pak"/>
			<Job Input="*.*" Zip="${TargetRoot}/Scripts.pak" Exclude = "Libs/AI/_*/*.*;Libs/AI/autotest/*.*;Libs/AI/bug_report/*.*;Libs/AI/so/*.*;Libs/AI/TreeReplays/*.*;Libs/Haste/*.dtd;${DLC2Exclude};${DLC3Exclude};${DLC4Exclude}"/>
		</IfNot>
	</ScriptAssetsConversion>

	<Run Job="ScriptAssetsConversion" />

</RCJobs>
